<?php

/**
 * @file
 * 实现微信开放平台部分功能
 * @hook
 *  hook_weixin_event_default(&$value, &$output) 默认回复
 *  hook_weixin_event_subscribe(&$value, &$output) 关注成功
 *  hook_weixin_event_unsubscribe(&$value, &$output) 取消关注
 *  hook_weixin_message_filter_X(&$value, &$output) 消息推送处理，X 对应 msgType
 */

/**
 * @Implement of hook_init()
 */
function weixin_init() {
  /**
   * 加载微信加解密 SDK
   */
  module_include_file('weixin/WXBizMsgCrypt.php', 'weixin');

  global $_weixin;

  $data = array();
  foreach (array('app_id', 'app_secret', 'app_token', 'app_aes_key') as $key) {
    $data[$key] = var_get_key('weixin', $key);
  }
  $_weixin = (object) $data;
}

/**
 * Implement of hook_menu()
 */
function weixin_menu() {
  $items['admin/weixin/settings'] = array(
    'title' => '微信设置',
    'page_callback' => 'dd_get_form',
    'page_arguments' => array('weixin_admin_settings'),
    'access_arguments' => array('weixin admin settings'),
    'file' => 'weixin.admin.inc',
  );
  
  $items['admin/weixin/users'] = array(
    'title' => '微信用户管理',
    'page_callback' => 'weixin_admin_users',
    'access_arguments' => array('weixin admin users'),
    'file' => 'weixin.admin.inc',
  );

  return $items;
}

/**
 * @Implement of hook_perm()
 */
function weixin_perm() {
  return array(
    'weixin admin settings' => t('weibo', '微信设置管理'),
    'weixin admin users' => t('weibo', '微信用户管理'),
    'weixin user bind' => t('weibo', '绑定微信帐号'),
    'weixin user login' => t('weibo', '使用微信帐号登录'),
  );
}

/**
 * @Implement of hook_system_admin_menus()
 * 管理菜单
 */
function weixin_system_admin_menus() {
  return array(array(
    array(t('weixin', '微信设置'), 'admin/weixin/settings'),
    array(t('weibo', '微信用户'), 'admin/weixin/users'),
  ), t('weixin', '微信管理'));
}

function weixin_get_goto_url($redirect, $value = '') {
  global $_weixin;

  $url = 'https://open.weixin.qq.com/connect/oauth2/authorize?';
  $url .= 'appid=' . $_weixin->app_id;
  $url .= '&redirect_uri=' . urlencode(url('ajax', array('absolute' => true, 'query' => array('module' => 'weixin', 'op' => 'goto', 'redirect' => urlencode($redirect)))));
  $url .= '&response_type=code';
  $url .= '&scope=SCOPE&state=' . ($value ? urlencode($value) : 'STATE');
  $url .= '&connect_redirect=1#wechat_redirect';

  return $url;
}

// public weixin_get_access_token() {{{ 
/**
 * weixin_get_access_token
 *  获取 access token
 * 
 * @access public
 * @return string
 */
function weixin_get_access_token() {
  if ($cache = cache_get('weixin_access_token')) {
    $token = $cache->data;
  } else {
    global $_weixin;

    dd_log('weixin_token', '获取 access token');

    $url = 'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=' . $_weixin->app_id . '&secret=' . $_weixin->app_secret;
    $result = dd_http_request($url, array(), 'GET');
    $data = json_decode($result->data);
    if (!empty($data->access_token)) {
      cache_set('weixin_access_token', $data->access_token, 'cache', 7000);
      $token = $data->access_token;
    } else {
      dd_log('weixin_token', $result->data);
    }
  }

  return $token;
}
// }}}

// public weixin_get_uid_by_openid($openid) {{{ 
/**
 * weixin_get_uid_by_openid
 *  根据微信 id 获取用户本地 uid
 * 
 * @param mixed $openid 
 * @access public
 * @return void
 */
function weixin_get_uid_by_openid($openid) {
  static $data;

  if (!isset($data[$openid])) {
    $data[$openid] = db_query('SELECT uid FROM {user_ext} WHERE type = ? AND ext_type = ?',
    array('weixin', $openid), array('return' => 'column'));
  }

  return $data[$openid];
}
// }}}

// public weixin_get_user_info($openid, $lang) {{{ 
/**
 * weixin_get_user_info
 *  根据微信 openid 获取用户的微信基本信息
 * 
 * @param string $openid 
 * @param string $lang
 * @access public
 * @return object
 */
function weixin_get_user_info($openid, $lang = 'zh_CN') {
  global $_weixin;

  if (!$token = weixin_get_access_token()) return false;

  $url = 'https://api.weixin.qq.com/cgi-bin/user/info?access_token=' . $token . '&openid=' . $openid . '&lang=zh_CN';
  $result = dd_http_request($url, array(), 'GET');
  if ($data = json_decode($result->data)) {
    if (!empty($data->subscribe)) {
      return $data;
    }
  }
  dd_log('weixin_user', 'openid ' . $openid . ' 已取消关注，无法获取信息');
  text_log('weixin_error', $result->data);
}
// }}}

function weixin_message_filter_default(&$value, &$output) {
  $output['Content'] = '抱歉，不懂你在说什么。';
  module_alter_all('weixin_event_default', $value, $output);
}

// public weixin_message_reply($data) {{{ 
/**
 * weixin_message_reply
 *  被动回复用户
 * 
 * @param array $data 
 * @access public
 * @return void
 */
function weixin_message_reply($data) {
  global $_weixin;

  $api = new WXBizMsgCrypt($_weixin->app_token, $_weixin->app_aes_key, $_weixin->app_id);

  if (empty($data['CreateTime'])) $data['CreateTime'] = time();
  if (empty($data['FromUserName'])) $data['FromUserName'] = $_weixin->app_id; 

  // 需要发送的明文
  $request = weixin_xml_encode($data);
  $output = ''; //xml格式的密文
  $errCode = $api->EncryptMsg($request, $data['CreateTime'], rand(100000, 88888888), $output);

  if ($errCode == 0) {
    return $output;
  } else {
    dd_log('weixin_error', $errCode);
    return false;
  }
}
// }}}

function weixin_xml_safe_str($str) {   
  return '<![CDATA['.preg_replace("/[\\x00-\\x08\\x0b-\\x0c\\x0e-\\x1f]/",'',$str).']]>';   
} 

function weixin_data_to_xml($data) {
  $xml = '';
  foreach ($data as $key => $val) {
    is_numeric($key) && $key = "item id=\"$key\"";
    $xml    .=  "<$key>";
    $xml    .=  ( is_array($val) || is_object($val)) ? weixin_data_to_xml($val)  : weixin_xml_safe_str($val);
    list($key, ) = explode(' ', $key);
    $xml    .=  "</$key>";
  }
  return $xml;
} 

function weixin_xml_encode($data, $root='xml', $item='item', $attr='', $id='id', $encoding='utf-8') {
  if(is_array($attr)){
    $_attr = array();
    foreach ($attr as $key => $value) {
      $_attr[] = "{$key}=\"{$value}\"";
    }
    $attr = implode(' ', $_attr);
  }
  $attr   = trim($attr);
  $attr   = empty($attr) ? '' : " {$attr}";
  $xml   = "<{$root}{$attr}>";
  $xml   .= weixin_data_to_xml($data, $item, $id);
  $xml   .= "</{$root}>";
  return $xml;
}

/**
 * @Implement of hook_weixin_message_filter_event()
 */
function weixin_weixin_message_filter_event($value, &$output) {
  switch ($value['message']['Event']) {
    case 'subscribe':
      // 关注
      if (!empty($value['message']['FromUserName'])) {
        if (!$ac = db_query('SELECT * FROM {user_ext} WHERE type = ? AND ext_type = ?',
        array('weixin', $value['message']['FromUserName']), array('return' => 'one'))) {
          $ac = new stdClass;
          
          // @TODO
          //  随机用户名，经测试，若调用接口获取用户信息，可能响应变慢，而无法即时回复用户
          //  用户昵称等信息，通过计划任务定时同步
          
          $ac->name = 'wx_' . time();

          // 检查用户名是否存在，若存在，则增加编号，产生一个新的用户名。
          $i = 0;
          while ($uid = db_query('SELECT uid FROM {users} WHERE name = ?',
          array($ac->name), array('return' => 'column'))) {
            $ac->name = 'wx_' . (time()+$i);
            ++$i;
          }
        
          // 生成随机密码 
          $ac->pass = dd_range_str(). dd_range_str();

          // 生成一个邮箱
          $ac->mail = md5($ac->name) . '@test.weixin.com';

          // 扩展信息
          $user_ext = new stdClass();

          // 设为默认帐号
          $user_ext->ext_id = 1;
          $user_ext->ext_type = $value['message']['FromUserName'];
          $user_ext->type = 'weixin';
          $user_ext->ext_name = $ac->name;
          $user_ext->timestamp = time();
          
          // 用户创建成功后的状态
          $ac->status = var_get_key('weixin', 'user_status', 1) ? 1 : (var_get_key('user', 'status', 1) == 1 ? 1 : 0);
          $error = '';
          
          if ($user = user_save($ac, NULL, $error)) {
            // 写入微信帐号扩展信息，以绑定到用户
            if (!user_ext_save($user, array($user_ext))) {
              dd_log('weixin_error', '微信帐号 ' . $value['message']['FromUserName'] . ' 绑定失败了'); 
            } else {
              $output['Content'] = '欢迎关注！';
            }

            $value['user'] = $user;
          }
        } else {
          // 曾经关注过，已经有用户信息
          $output['Content'] = '欢迎再次回来！';
          // @TODO 将用户重新激活
          db_exec('UPDATE {users} SET status = 1 WHERE uid = ?', array($ac->uid));
          $value['user'] = $ac;
        }
        module_alter_all('weixin_event_subscribe', $value, $output);
      }
    break;
    case 'unsubscribe':
      // 取消关注
      if ($ac = db_query('SELECT * FROM {user_ext} WHERE type = ? AND ext_type = ?',
      array('weixin', $value['message']['FromUserName']), array('return' => 'one'))) {
        // @TODO 将用户状态设为禁止
        db_exec('UPDATE {users} SET status = 0 WHERE uid = ?', array($ac->uid));
      }
      module_alter_all('weixin_event_unsubscribe', $value, $output);
    break;
  }
}

